#summary Design of tool to change layout of files on ext3 filesystem
#labels design,ext3,Phase-Design

= Introduction =
This tool will change layout of files needed for application/system start in order to reduce number of disk seeks.

Input to this module will be layout generated by logic module, based on application and system startup traces. The logic is *not* contained in this module.

= Design goals =
  * Relocator must be resistant to errors in input (so that user cannot screw his disk by feeding wrong file to relocator) 
  * Relocator should be simple - the logic should be outside relocator 
  * Relocator should be flexible - it should take any layout generated by the logic module and lay out files on disk (subject to filesystem structure constraints) 
  * Created disk layout should be minimal in terms of disk seek distances, ideally blocks should be subsequent on disk.

= Design decisions =
  * Input file will specify explicite indirect blocks to be moved (see  [http://groups.google.com/group/prefetch-devel/msg/a506250976e66de1 this e-mail]). "Smart" mode (leaving handling indirect blocks to remapper) will be introduced later if necessary. Rationale:
     * Logic module should have full control over layout (see design goals).
  * ~~ext3remapper tool by Jan Kara will be used as base for layout tool. Rationale (see  [http://groups.google.com/group/prefetch-devel/msg/a506250976e66de1 this e-mail])~~ Ext3remapper will not be used as base. Rationale: ext3remapper requires in input physical location of blocks on disk, while prefetch tracing facility can output only inodes, logical offset and length:
     * ~~It allows for moving indirect blocks explicite specified in input file (see above)~~
     * ~~It is more advanced in terms of parsing log and interface.~~
  * e2moveblocks will be used as base for layout tool as its input fits better the output of prefetch tracing tool.
     
= Implementation issues/TODO =
  * e2moveblocks does not support input as inode numbers (will be implemented)
  * e2moveblocks does not support explicit relocation of indirect blocks (not critical, can be implemented later if necessary)
  * e2moveblocks does not support relocating inodes (impact on performance not known, deferred until measurements show it is feasible)
     * in relocating inodes the hard part and special case are hard links

= Discussions =
Discussion threads:
   * http://groups.google.com/group/prefetch-devel/browse_thread/thread/2d800df1ceaab5ae/e0bbb68fe61b3725#e0bbb68fe61b3725


